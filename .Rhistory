parameters <- fit$par
parameters
thresholds <- fit$thresholds
thresholds
plot(fit)
plot(fit)
plot(fit, color = cond)
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_light()
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
library(quickpsy)
document()
document()
library(quickpsy)
document()
library(devtools)
document()
library(quickpsy)
??pluck
document(
)
library(quickpsy)
document()
library(quickpsy)
library(quickpsy)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 5)
names(fit)
thresholds <- fit$thresholds
thresholds
plot(fit)
plot(fit, color = cond)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
fit
plot(fit, color = cond) +
labs(y = "Proportion")
class(plot(fit))
plot(fit, color = cond) +
# labs(y = "Proportion") +
theme_minimal()
plot(fit)
ggplot() +
facet_wrap(~ participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(cond),group=paste(sample, cond)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = cond),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = cond), size = 4)
library(ggplot2)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
ggplot() +
facet_wrap(~ participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(cond),group=paste(sample, cond)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = cond),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = cond), size = 4)
document()
library(devtools)
document()
library(quickpsy)
library(quickpsy)
document()
library(quickpsy)
document()
?quickpsy
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 10) # using only 10 samples!
plot(fit)
plot(fit, color = cond)
plotpar(fit)
plotthresholds(fit, geom = "point")
library(quickpsy)
document()
library(quickpsy)
document()
library(quickpsy)
document()
library(quickpsy)
document()
?x_seq
document()
?x_seq
library(quickpsy)
document()
codetools::checkUsagePackage()
checkUsagePackage()
install.packages("codetools")
checkUsagePackage()
?globalVariables
?pnorm
library(quickpsy)
document()
document()
library(quickpsy)
document()
library(quickpsy)
library(quickpsy)
document()
document()
library(quickpsy)
?media
?median
?lm
?tail
document()
library(quickpsy)
document()
?importFrom
document()
document()
library(quickpsy)
library(quickpsy)
?summarise
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5)
library(MPDiR)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5)
plot(fit)
plot(fit)
document()
library(quickpsy)
?optim
?combn
document()
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5)
plot(fit)
?as.formula
?packageVersion
?namefile
?read.table
?approx
document()
library(quickpsy)
document(
)
library(quickpsy)
mtcars[mpg]
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5, paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5, paircomparisons = FALSE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5, paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
library(tidyverse)
library(MPDiR)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
library(tidyverse)
library(MPDiR)
library(quickpsy)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
document()
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
Vernier
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
fit$par_difbootstrap
TRUE
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5,
paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
document()
document()
library(devtools)
document()
library(quickpsy)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/param_dif.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
library(MPDiR)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/param_dif.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy_without_bootstrap.R', echo=TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy_without_bootstrap.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy_without_bootstrap.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickpsy_without_bootstrap.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm"), B = 5,
paircomparisons = TRUE)
library(quickpsy)
xx <- data.frame(V1 = 1, V2 = 2)
xx
xx[
]
xx[V1,]
xx
xx["V1",]
xx[V1,]
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), B = 5,
paircomparisons = TRUE)
xx[V1,]
xx["V1",]
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/param_dif.R', echo=TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), B = 5,
paircomparisons = TRUE)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), B = 1,
paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), B = 1,
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/param_dif.R', echo=TRUE)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), B = 1,
paircomparisons = TRUE)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N,
grouping = c("WaveForm", "Direction"), bootstrap = "none",
paircomparisons = TRUE)
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/param_dif.R', echo=TRUE)
document()
library(devtools)
document()
library(quickpsy)
document()
library(quickpsy)
document()
library(quickpsy)
document()
library(quickpsy)
document()
library(quickpsy)
vignette("basics")
browseVignettes("quickpsy")
library(quickpsy)
browseVignettes("quickpsy")
build_vignettes()
browseVignettes("quickpsy")
build()
browseVignettes("quickpsy")
build_vignettes()
browseVignettes("quickpsy")
browseVignettes("dplyr")
vignette(basics)
vignette(basics)
use_readme_rmd()
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 1)
plot(fit, color = cond)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"))
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"))
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"))
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"))
browseVignettes("quickpsy")
install.packages(c("backports", "car", "conquer", "cpp11", "Deriv", "dplyr", "Hmisc", "maptools", "MASS", "mgcv", "nlme", "pbapply", "ps", "R.methodsS3", "R.oo", "R.utils", "tidyr", "zip"))
library(devtools)
document()
library(quickpsy)
build_vignettes()
browseVignettes("quickpsy")
document()
library(quickpsy)
library(quickpsy)
library(quickpsy)
?quickpsy
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
plot(fit)
fir
fit
fit$deviance
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant 1")
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant 1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant 1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
d
qpdat
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
plot(fit)
fit$deviance
fit$averages
glm( cbind(k, n -k ) ~ phase, family = binomial(probit), data = d)
d
glm( cbind(k, n -k ) ~ phase, family = binomial(probit),
data = fit$averages)
fit$aic
fit$logliks
fit$loglikssaturated
library(quickpsy)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
plot(fit)
library(quickpsy)
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
library(quickpsy)
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
plot(fit)
fit$deviance
fit$averages
glm( cbind(k, n - k) ~ phase, family = binomial(probit),
data = fit$averages)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none", line_res = 10)
plot(fit)
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none", line_res = 10)
plot(fit)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
library(quickpsy)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
plot(fit)
fit_non_null_peris
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
plot(fit)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/param.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/param.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy.R", echo=TRUE)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
library(quickpsy)
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
library(quickpsy)
library(tidyverse)
library(quickpsy)
library(tidyverse)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
library(quickpsy)
library(tidyverse)
library(quickpsy)
library(tidyverse)
quickpsy
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "parametric", line_res = 10)
fit <- quickpsy(d, phase, resp, bootstrap = "none", line_res = 10)
plot(fit)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none")
plot(fit)
fit <- quickpsy(d, phase, resp, bootstrap = "none", method = "nlopt")
library(nloptr)
d <- qpdat %>%
filter(cond == "cond1", participant == "Participant1")
fit <- quickpsy(d, phase, resp, bootstrap = "none", method = "nlopt")
plot(fit)
library(quickpsy)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/create_nll.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/create_nll_saturated.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/nll_fun.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/nll_fun_saturated.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/nll_fun.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/nll_fun.R", echo=TRUE)
library(quickpsy)
?quickpsy
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
library(rlang)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
?quickpsy
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
source("~/Dropbox/quickpsy/2021_09_25/quickpsy/R/averages.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
devtools::load_all(".")
qpdat
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
plot(fit)
fit$logliks
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none", binomial_coef = FALSE)
plot(fit)
fit$logliks
?quickpsy
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
library(tidyverse)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
devtools::load_all(".")
library(tidyverse)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), bootstrap = "none")
plot(fit)
library(tidyverse)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"))
library(tidyverse)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none")
plot(fit)
