dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(dat, phase, resp, grouping = c("cond"), bootstrap = "none")
fit
fit$hessian
fit$par
fit$hessian
fit$hessian
fit$hessian |>
mutate(f = estimate_se_from_hessian(hessian))
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian)
fisher_info
}
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
fit$hessian
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian)
fisher_info
}
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
fisher_info
}
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
mutate(f = estimate_se_from_hessian(hessian))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
mutate(f = estimate_se_from_hessian(hessian))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
mutate(f = list(estimate_se_from_hessian(hessian)))
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
summarise(f = estimate_se_from_hessian(hessian))
fit$par
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
se
}
fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit$par
fit$par
fit_h <- fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit_h <- fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit_h
fit$par |>
left_join(fit_h)
fit$par
fit_h
fit_h <- fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit_h <- fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit_h
fit$par |>
left_join(fit_h, by = cond)
fit_h
fit$par |>
left_join(fit_h, by = "cond")
fit$par
fit_h
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tible(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(se = estimate_se_from_hessian(hessian))
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
tibb
fit_h
fit$par |>
left_join(fit_h)
estimate_se_from_hessian <- function(hessian) {
print(hessian)
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = group_vars(fit$par))
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = group_vars(fit$par))
fit$par |>
left_join(fit_h, by = group_vars(fit$par))
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = group_vars(fit$par))
fit_h
group_vars(fit$par)
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = c("parn", group_vars(fit$par)))
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = c("parn", group_vars(fit$par))) |>
mutate(parinf = par - qnorm(0.5 + 0.5 *ci) * se,
parsup = par - qnorm(0.5 + 0.5 *ci) * se)
fit$par
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = c("parn", group_vars(fit$par))) |>
mutate(parinf = par - qnorm(0.5 + 0.5 *ci) * se,
parsup = par - qnorm(0.5 + 0.5 *ci) * se) |>
select(-se)
estimate_se_from_hessian <- function(hessian) {
fisher_info <- solve(hessian[[1]])
se <- sqrt(diag(fisher_info))
tibble(parn = paste0("p", seq(1, length(se))),
se = se)
}
fit_h <- fit$hessian |>
summarise(estimate_se_from_hessian(hessian))
fit$par |>
left_join(fit_h, by = c("parn", group_vars(fit$par))) |>
mutate(parinf = par - qnorm(0.5 + 0.5 *ci) * se,
parsup = par - qnorm(0.5 + 0.5 *ci) * se) |>
relocate(se, .after = last_col())
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"), bootstrap = "none")
fit
fit$parci
fit <- quickpsy(dat, phase, resp, grouping = c("cond"), B = 200)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"), B = 200)
fit
fit$par
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none")
fit$parci
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none")
fit$par
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .975)
fit$par
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .975)
fit$par
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .99)
fit$par
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .99)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .99)
fit
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .99)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci_boot.R", echo=TRUE)
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .99)
fit
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .95)
fit
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(dat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .95)
eh <- fit$hessian[[1]][[1]]
fisher_info <- solve(hessian)
?
?confint
?quickpsy
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(dat, phase, resp, grouping = c("cond", "participant"),
bootstrap = "none", ci = .95)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("cond", "participant"),
bootstrap = "none", ci = .95)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("cond", "participant"),
bootstrap = "none", ci = .95)
fit <- quickpsy(qpdat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .95)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("cond"),
bootstrap = "none", ci = .95)
fit
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
qpdat
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
fit
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
fit
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
se_from_hessian <- hessian |>
summarise(estimate_se_from_hessian(hessian), .groups = "keep")
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
fit
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
fit$par
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 100)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 100)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy_without_bootstrap.R", echo=TRUE)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy.R", echo=TRUE)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 100)
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
fit$par
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 100)
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/parci.R", echo=TRUE)
fit
source("~/Dropbox/quickpsy/2023_02_03/quickpsy/R/quickpsy.R", echo=TRUE)
fit
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 2)
fit
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 2)
fit$par
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
B = 100)
fit$par
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
fit$par
fit$par
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"),
bootstrap = "none", ci = .95)
fit$par
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant"),
bootstrap = "none", ci = .95)
fit$par
dat <- qpdat |>
filter(participant == "Participant1")
fit <- quickpsy(qpdat, phase, resp,
bootstrap = "none", ci = .95)
fit$par
devtools::load_all(".")
devtools::load_all(".")
library(tidyverse)
library(quickpsy)
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none")
library(tidyverse)
library(quickpsy)
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none")
library(quickpsy)
load_all
devtools::load_all(".")
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none")
fit$deviance
model_glm <- glm(cbind(k, n-k) ~ x, family = binomial(logit))
model_glm
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none", binomial_coef = FALSE)
fit$deviance
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none", binomial_coef = TRUE)
fit$deviance
n <- 100
x <- c(.2, .4, .6, .8, 1)
k <- c(10, 26, 73, 94, 97)
r <- n - k
y <- k/n
dat <- data.frame(x, y, k, r, n)
fit <- quickpsy(dat, x, k, n, bootstrap = "none",
fun = logistic_fun,
binomial_coef = TRUE)
fit$deviance
glance(model_glm)
library(broom)
glance(model_glm)
glance(model_glm)
?pchisq
glance(model_glm) |>
mutate(pchisq(null.deviance, df = df.null))
glance(model_glm) |>
mutate(pchisq(null.deviance, df = df.null))
model_glm <- glm(cbind(k, n-k) ~ x, family = binomial(logit))
model_glm
glance(model_glm) |>
mutate(p_value = pchisq(null.deviance, df = df.null))
glance(model_glm) |>
mutate(p_value = pchisq(null.deviance, df = df.null), lower.tail = FALSE)
glance(model_glm) |>
mutate(p_value = pchisq(null.deviance, df = df.null, lower.tail = FALSE))
model_glm <- glm(cbind(k, n-k) ~ x, family = binomial(logit))
model_glm
glance(model_glm) |>
select(null.deviance, df.null) |>
mutate(p_value = pchisq(null.deviance, df = df.null, lower.tail = FALSE)) |>
rename(null_deviance = null.deviance)
model_glm <- glm(cbind(k, n-k) ~ x, family = binomial(logit))
model_glm
glance(model_glm) |>
select(null.deviance, df.null) |>
mutate(p_value = pchisq(null.deviance, df = df.null, lower.tail = FALSE)) |>
rename(null_deviance = null.deviance, df_null = df.null)
glance(model_glm) |>
select(null.deviance, df.null) |>
mutate(p_value = pchisq(null.deviance, df = df.null, lower.tail = FALSE)) |>
rename(null_deviance = null.deviance, df_null = df.null)
